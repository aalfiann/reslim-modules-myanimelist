<?php
//Define interface class for router
use \Psr\Http\Message\ServerRequestInterface as Request;    //PSR7 ServerRequestInterface   >> Each router file must contains this
use \Psr\Http\Message\ResponseInterface as Response;        //PSR7 ResponseInterface        >> Each router file must contains this

//Define your modules class
use \modules\myanimelist\MyAnimeList as MyAnimeList;        //Your main modules class

//Define additional class for any purpose
use \classes\middleware\ApiKey as ApiKey;                   //ApiKey Middleware             >> To authorize request by using ApiKey generated by reSlim

    
    // Get module information (include cache and for public user)
    $app->map(['GET','OPTIONS'],'/myanimelist/get/info/', function (Request $request, Response $response) {
        $mal = new MyAnimeList($this->db);
        $body = $response->getBody();
        $response = $this->cache->withEtag($response, $this->etag2hour.'-'.trim($_SERVER['REQUEST_URI'],'/'));
        $body->write($mal->viewInfo());
        return classes\Cors::modify($response,$body,200,$request);
    })->add(new ApiKey);

    // Search Anime 
    $app->map(['GET','OPTIONS'],'/myanimelist/search/anime', function (Request $request, Response $response) {
        $mal = new MyAnimeList($this->db);
        $mal->lang = (empty($_GET['lang'])?$this->settings['language']:$_GET['lang']);
        $mal->title = filter_var((empty($_GET['title'])?'':$_GET['title']),FILTER_SANITIZE_STRING);
        $mal->username = $request->getAttribute('username');
        $mal->token = $request->getAttribute('token');
        $body = $response->getBody();
        $body->write($mal->searchAnimePublic());
        return classes\Cors::modify($response,$body,200,$request);
    })->add(new ApiKey);

    // Find Anime 
    $app->map(['GET','OPTIONS'],'/myanimelist/find/anime', function (Request $request, Response $response) {
        $mal = new MyAnimeList($this->db);
        $mal->lang = (empty($_GET['lang'])?$this->settings['language']:$_GET['lang']);
        $mal->title = filter_var((empty($_GET['title'])?'':$_GET['title']),FILTER_SANITIZE_STRING);
        $mal->username = $request->getAttribute('username');
        $mal->token = $request->getAttribute('token');
        $body = $response->getBody();
        $body->write($mal->findAnimePublic());
        return classes\Cors::modify($response,$body,200,$request);
    })->add(new ApiKey);

    // Get Anime by ID 
    $app->map(['GET','OPTIONS'],'/myanimelist/get/anime/{id}', function (Request $request, Response $response) {
        $mal = new MyAnimeList($this->db);
        $mal->lang = (empty($_GET['lang'])?$this->settings['language']:$_GET['lang']);
        $mal->id = $request->getAttribute('id');
        $mal->username = $request->getAttribute('username');
        $mal->token = $request->getAttribute('token');
        $body = $response->getBody();
        $body->write($mal->getAnimeByIDPublic());
        return classes\Cors::modify($response,$body,200,$request);
    })->add(new ApiKey);

    // Search Manga 
    $app->map(['GET','OPTIONS'],'/myanimelist/search/manga', function (Request $request, Response $response) {
        $mal = new MyAnimeList($this->db);
        $mal->lang = (empty($_GET['lang'])?$this->settings['language']:$_GET['lang']);
        $mal->title = filter_var((empty($_GET['title'])?'':$_GET['title']),FILTER_SANITIZE_STRING);
        $mal->username = $request->getAttribute('username');
        $mal->token = $request->getAttribute('token');
        $body = $response->getBody();
        $body->write($mal->searchMangaPublic());
        return classes\Cors::modify($response,$body,200,$request);
    })->add(new ApiKey);

    // Find Manga 
    $app->map(['GET','OPTIONS'],'/myanimelist/find/manga', function (Request $request, Response $response) {
        $mal = new MyAnimeList($this->db);
        $mal->lang = (empty($_GET['lang'])?$this->settings['language']:$_GET['lang']);
        $mal->title = filter_var((empty($_GET['title'])?'':$_GET['title']),FILTER_SANITIZE_STRING);
        $mal->username = $request->getAttribute('username');
        $mal->token = $request->getAttribute('token');
        $body = $response->getBody();
        $body->write($mal->findMangaPublic());
        return classes\Cors::modify($response,$body,200,$request);
    })->add(new ApiKey);

    // Get Manga by ID 
    $app->map(['GET','OPTIONS'],'/myanimelist/get/manga/{id}', function (Request $request, Response $response) {
        $mal = new MyAnimeList($this->db);
        $mal->lang = (empty($_GET['lang'])?$this->settings['language']:$_GET['lang']);
        $mal->id = $request->getAttribute('id');
        $mal->username = $request->getAttribute('username');
        $mal->token = $request->getAttribute('token');
        $body = $response->getBody();
        $body->write($mal->getMangaByIDPublic());
        return classes\Cors::modify($response,$body,200,$request);
    })->add(new ApiKey);